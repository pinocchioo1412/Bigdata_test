version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - broker-kafka

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - broker-kafka
    depends_on:
      - zookeeper

  spark-master:
    image: bitnami/spark:3.3.0
    container_name: spark-master
    environment:
      SPARK_MODE: master
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - broker-kafka

  spark-worker:
    image: bitnami/spark:3.3.0
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
    ports:
      - "8081:8081"
    networks:
      - broker-kafka
    depends_on:
      - spark-master

  spark-submit:
    image: bitnami/spark:3.3.0
    container_name: spark-submit
    volumes:
      - ./app:/app
    command: >
      /opt/bitnami/spark/bin/spark-submit 
      --master spark://spark-master:7077 
      --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0 
      /app/streaming.py
    depends_on:
      - kafka
      - spark-master
    networks:
      - broker-kafka

networks:
  broker-kafka:
    driver: bridge
